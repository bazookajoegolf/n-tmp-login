{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_components/general/status/status.component.css","webpack:///./src/app/_components/general/status/status.component.html","webpack:///./src/app/_components/general/status/status.component.ts","webpack:///./src/app/_components/profile/admin/admin.component.css","webpack:///./src/app/_components/profile/admin/admin.component.html","webpack:///./src/app/_components/profile/admin/admin.component.ts","webpack:///./src/app/_components/profile/change-password/change-password.component.css","webpack:///./src/app/_components/profile/change-password/change-password.component.html","webpack:///./src/app/_components/profile/change-password/change-password.component.ts","webpack:///./src/app/_components/profile/create-profile/create-profile.component.css","webpack:///./src/app/_components/profile/create-profile/create-profile.component.html","webpack:///./src/app/_components/profile/create-profile/create-profile.component.ts","webpack:///./src/app/_components/profile/home/home.component.css","webpack:///./src/app/_components/profile/home/home.component.html","webpack:///./src/app/_components/profile/home/home.component.ts","webpack:///./src/app/_components/profile/login/login.component.css","webpack:///./src/app/_components/profile/login/login.component.html","webpack:///./src/app/_components/profile/login/login.component.ts","webpack:///./src/app/_components/profile/newuser/newuser.component.css","webpack:///./src/app/_components/profile/newuser/newuser.component.html","webpack:///./src/app/_components/profile/newuser/newuser.component.ts","webpack:///./src/app/_components/profile/profile/profile.component.css","webpack:///./src/app/_components/profile/profile/profile.component.html","webpack:///./src/app/_components/profile/profile/profile.component.ts","webpack:///./src/app/_components/profile/reset/reset.component.css","webpack:///./src/app/_components/profile/reset/reset.component.html","webpack:///./src/app/_components/profile/reset/reset.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/assets/materialmodules.ts","webpack:///./src/app/models/alert.ts","webpack:///./src/app/services/admin.guard.ts","webpack:///./src/app/services/alert.service.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/validators/password-validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+BAA+B,kBAAkB,wBAAwB,sBAAsB,iBAAiB,mBAAmB,oBAAoB,uBAAuB,kBAAkB,yBAAyB,GAAG,oBAAoB,gCAAgC,GAAG,mBAAmB,gCAAgC,GAAG,iBAAiB,gCAAgC,GAAG,oBAAoB,gCAAgC,GAAG,oBAAoB,gCAAgC,GAAG,6CAA6C,2rC;;;;;;;;;;;ACAxhB,wEAAwE,iBAAiB,oCAAoC,eAAe,iB;;;;;;;;;;;;;;;;;;;ACA3E;AACN;AACT;AAUlD;IAUE,yBAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;QAR/C,WAAM,GAAU;YACd,KAAK,EAAG,SAAS;YACjB,OAAO,EAAG,UAAU;SAErB,CAAC;IAIiD,CAAC;IAEpD,kCAAQ,GAAR;QAAA,iBAUC;QARC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAC,KAAY;YAClD,IAAG,CAAC,KAAK,EAAE;gBACR,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,OAAO;aACT;YAED,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX,UAAY,KAAY;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,WAAC,IAAI,QAAC,KAAK,KAAK,EAAX,CAAW,CAAC,CAAC;IACtD,CAAC;IAED,kCAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,CAAC,KAAK,EAAE;YAAC,OAAM;SAAC;QAEpB,QAAO,KAAK,CAAC,IAAI,EAAE;YACjB,KAAK,uDAAS,CAAC,OAAO,CAAC,CAAC,OAAO,qBAAqB,CAAC;YACrD,KAAK,uDAAS,CAAC,KAAK,CAAC,CAAC,OAAO,oBAAoB,CAAC;YAClD,KAAK,uDAAS,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAkB,CAAC;YAC/C,KAAK,uDAAS,CAAC,OAAO,CAAC,CAAC,OAAO,qBAAqB,CAAC;SAEtD;IACH,CAAC;IAtCU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,0HAAsC;;SAEvC,CAAC;+EAWmC,oEAAY;OAVpC,eAAe,CAwC3B;IAAD,sBAAC;CAAA;AAxC2B;;;;;;;;;;;;ACZ5B,+DAA+D,mK;;;;;;;;;;;ACA/D,8C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uHAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,gCAAgC,mBAAmB,uBAAuB,kBAAkB,mBAAmB,GAAG,aAAa,kBAAkB,GAAG,gBAAgB,mBAAmB,oBAAoB,SAAS,iBAAiB,wBAAwB,0BAA0B,GAAG,qBAAqB,yBAAyB,mBAAmB,GAAG,cAAc,mBAAmB,GAAG,6CAA6C,ujC;;;;;;;;;;;ACA/a,8xE;;;;;;;;;;;;;;;;;;;;;;ACAiE;AAEF;AACQ;AACV;AACI;AAC1B;AAOvC;IAQE,iCAAoB,MAAqB,EAAU,MAAa,EAAU,KAAoB;QAA1E,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAEnG,0CAAQ,GAAR;QAAA,iBA4BC;QA1BC,IAAG,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAAE;QAErE,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACtB,IAAI,EAAG,IAAI,0DAAW,CAAE,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,CAAC;YACtD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1G,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACvG,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC9D,EAAE,EAAE,UAAU,EAAE,4EAAa,CAAC,KAAK,EAAE,CAAC,CAAC;QAG1C,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;aACvB,SAAS,CAAC,UAAC,OAAO;YACjB,IAAG,OAAO,EAAE;gBACZ,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAG,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;gBACpB,KAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;aACrB;QAEH,CAAC,EAAC,UAAC,KAAK;YACL,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC9B,UAAU,CAAC;gBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,CAAC,EAAC,IAAI,CAAC,CAAC;QAER,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,6CAAW,GAAX,cAAuB,CAAC;IAExB,sBAAI,sCAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;QACzB,CAAC;;;OAAA;IAAA,CAAC;IAGJ,sBAAI,sCAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI;QAClB,CAAC;;;OAAA;IAED,0CAAQ,GAAR;QAAA,iBAoBD;QAnBG,IAAM,IAAI,GAAG;YACT,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;YACxC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;YAClC,IAAI,EAAG,IAAI,CAAC,IAAI,CAAC,IAAI;YACrB,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK;SAC1B;QACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;aACnC,SAAS,CAAC,kBAAQ;YACf,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAChD,0BAA0B;YAC1B,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACG,UAAC,KAAK;YACF,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACJ,CAAC;IAEV,CAAC;IAED,8CAAY,GAAZ;QACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAEpC,CAAC;IA7EY,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,qJAA+C;;SAEhD,CAAC;+EAS6B,oEAAY,EAAiB,sDAAM,EAAkB,oEAAY;OARnF,uBAAuB,CA+EnC;IAAD,8BAAC;CAAA;AA/EmC;;;;;;;;;;;;ACbpC,gCAAgC,oBAAoB,6BAA6B,mBAAmB,uBAAuB,iBAAiB,KAAK,sBAAsB,kBAAkB,GAAG,oBAAoB,gBAAgB,mBAAmB,SAAS,6CAA6C,+wB;;;;;;;;;;;ACAzS,0pE;;;;;;;;;;;;;;;;;;;;;;ACAiE;AACF;AACQ;AACrB;AACe;AAC1B;AAUvC;IAEE,uBAAuB;IACvB,gCAAoB,MAAqB,EAAU,MAAa,EAAU,KAAoB;QAA1E,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAEnG,yCAAQ,GAAR;QACA,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YAC1B,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,EAAG,IAAI,0DAAW,CAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACnG,QAAQ,EAAG,IAAI,0DAAW,CAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACvG,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC1D,EAAC,EAAC,UAAU,EAAE,4EAAa,CAAC,KAAK,EAAC,CAAC,CAAC;IACvC,CAAC;IACC,sBAAI,qCAAC;aAAL;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;QACzB,CAAC;;;OAAA;IAAA,CAAC;IAEN,yCAAQ,GAAR;QAAA,iBAmBA;QAlBE,IAAM,IAAI,GAAG;YACX,IAAI,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;YAC3B,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;YAC7B,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;YACnC,OAAO,EAAG,OAAO;SAClB;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aACvB,SAAS,CAAC,kBAAQ;YACf,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAChD,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAC3C,CAAC,EAAC,IAAI,CAAC,CAAC;QACV,CAAC,EACD,UAAC,KAAK;YACJ,IAAG,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAAE,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAAC;QAC5D,CAAC,CACA,CAAC;IAEP,CAAC;IApCW,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,kJAA8C;;SAE/C,CAAC;+EAI6B,oEAAY,EAAiB,sDAAM,EAAkB,oEAAY;OAHnF,sBAAsB,CAsClC;IAAD,6BAAC;CAAA;AAtCkC;;;;;;;;;;;;ACfnC,+DAA+D,mK;;;;;;;;;;;ACA/D,6C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oHAAoC;;SAErC,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,+DAA+D,mK;;;;;;;;;;;ACA/D,okC;;;;;;;;;;;;;;;;;;;;;ACGkD;AACe;AAC1B;AAEwB;AACE;AASjE;IAEE,uBAAuB;IACvB,wBAAoB,MAAqB,EAAU,MAAa,EAAU,KAAoB;QAA1E,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAEnG,iCAAQ,GAAR;QACA,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAClE,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7E,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,6BAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;QACzB,CAAC;;;OAAA;IAAA,CAAC;IAEF,iCAAQ,GAAR;QAAA,iBAwBA;QAtBE,IAAM,IAAI,GAAG;YACX,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;YAC7B,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;SACpC;QACA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aACxB,SAAS,CAAC,kBAAQ;YAEjB,IAAG,QAAQ,CAAC,KAAK,IAAI,QAAQ,EAAE;gBAC7B,KAAI,CAAC,KAAK,CAAC,OAAO,CAAE,yBAAyB,CAAC,CAAC;gBAEhD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC9C;YACC,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAChC,CAAC,EAAC,IAAI,CAAC,CAAC;QACV,CAAC,EACD,UAAC,KAAK;YACF,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE1C,CAAC,CACA,CAAC;IAEP,CAAC;IAxCW,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uHAAqC;;SAEtC,CAAC;+EAI6B,oEAAY,EAAiB,sDAAM,EAAkB,oEAAY;OAHnF,cAAc,CA2C1B;IAAD,qBAAC;CAAA;AA3C0B;;;;;;;;;;;;ACjB3B,+DAA+D,2K;;;;;;;;;;;ACA/D,8sB;;;;;;;;;;;;;;;;;;;;;ACAiE;AACf;AACe;AAC1B;AAEwB;AAO/D;IAGE,uBAAuB;IACvB,0BAAoB,MAAqB,EAAU,MAAa,EAAU,KAAmB;QAAzE,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAc;IAAI,CAAC;IAElG,mCAAQ,GAAR;QACA,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtD,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,+BAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;QACzB,CAAC;;;OAAA;IAAA,CAAC;IAEF,mCAAQ,GAAR;QAAA,iBAmBA;QAjBE,IAAM,IAAI,GAAG;YACX,SAAS,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;SACtC;QACA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;aACzB,SAAS,CAAC,kBAAQ;YACf,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAChD,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,CAAC,EAAC,IAAI,CAAC,CAAC;QACV,CAAC,EACD,UAAC,KAAK;YACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClB;gBAAE,KAAI,CAAC,KAAK,CAAC,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,CAAC;aAAC;QAEvC,CAAC,CACA,CAAC;IAEP,CAAC;IAnCW,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,6HAAuC;;SAExC,CAAC;+EAK6B,oEAAY,EAAiB,sDAAM,EAAiB,oEAAY;OAJlF,gBAAgB,CAqC5B;IAAD,uBAAC;CAAA;AArC4B;;;;;;;;;;;;ACZ7B,gCAAgC,mBAAmB,uBAAuB,kBAAkB,mBAAmB,GAAG,aAAa,kBAAkB,GAAG,gBAAgB,mBAAmB,oBAAoB,SAAS,iBAAiB,wBAAwB,0BAA0B,GAAG,qBAAqB,yBAAyB,mBAAmB,GAAG,cAAc,mBAAmB,GAAG,6CAA6C,+gC;;;;;;;;;;;ACA/a,2pG;;;;;;;;;;;;;;;;;;;;;;ACAiE;AAEF;AAEF;AACI;AAC1B;AACe;AAUtD;IAUE,0BAAoB,MAAqB,EAAU,MAAa,EAAU,KAAoB;QAA1E,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAe;QAP/F,wBAAwB;QACvB,aAAQ,GAAG,KAAK,CAAC;IAMiF,CAAC;IAEnG,mCAAQ,GAAR;QAAA,iBAsCD;QApCG,IAAG,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAAE;QAEvE,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,EAAG,IAAI,0DAAW,CAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACnG,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3G,CAAC,CAAC;QAGH,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;aACvB,SAAS,CAAC,UAAC,OAAO;YACjB,IAAG,OAAO,EAAE;gBACZ,4BAA4B;gBAC5B,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;gBACpB,6BAA6B;gBAC7B,oCAAoC;gBACpC,0CAA0C;gBAC1C,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,OAAO,EAAG,OAAO,CAAC,KAAK,EAAC,CAAC,CAAC;gBAChD,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAG,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,UAAU,EAAG,OAAO,EAAC,CAAC,CAAC;gBAC7C,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACpB,KAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;aACrB;YACF,iCAAiC;QAElC,CAAC,EAAC,UAAC,KAAK;YACL,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEtC,UAAU,CAAC;gBACT,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACrC,CAAC,EAAC,IAAI,CAAC,CAAC;QAER,CAAC,CAAC,CAAC;QAEJ,sBAAsB;IACzB,CAAC;IAED,sCAAW,GAAX;IAEA,CAAC;IAED,sBAAI,+BAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;QACzB,CAAC;;;OAAA;IAAA,CAAC;IAGJ,sBAAI,+BAAC;aAAL;YACE,OAAO,IAAI,CAAC,IAAI;QAClB,CAAC;;;OAAA;IAEG,mCAAQ,GAAR;QAAA,iBA+BC;QA9BG,IAAM,IAAI,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;YAC1B,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;YAC5B,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;SAC3C;QAGD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;aACnC,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAtB,CAAsB,CAAC,EAChC,iEAAU,CAAE,aAAG,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,GAAC,CAAC,CAEjD;aACA,SAAS,CACN,kBAAQ;YACR,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAC/C,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC/C,0BAA0B;YAC1B,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBAClC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,OAAO,EAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;gBACtD,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;gBACpD,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACpB,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACvB,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACE,aAAG,IAAI,YAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAArB,CAAqB,CAC9B,CAAC;IAEV,CAAC;IAEL,+CAA+C;IAC/C,+BAA+B;IAC/B,4DAA4D;IAC5D,yDAAyD;IACzD,qCAAqC;IACrC,6BAA6B;IAC7B,iDAAiD;IACjD,iEAAiE;IACjE,+DAA+D;IAC/D,qCAAqC;IACrC,mCAAmC;IACnC,yCAAyC;IACzC,oBAAoB;IACpB,SAAS;IACT,uBAAuB;IACvB,8EAA8E;IAC9E,2DAA2D;IAC3D,YAAY;IACZ,SAAS;IAET,IAAI;IAGH,uCAAY,GAAZ;QACC,oBAAoB;QACpB,8BAA8B;QAC9B,yEAAyE;QACzE,yGAAyG;QACzG,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,OAAO,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,aAAa,EAAG,OAAO,EAAC,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAG,IAAI,CAAC,QAAQ,EAAE;YAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;SAAC;;YACjC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAEA,mCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,aAAa,EAAG,EAAE,EAAC,CAAC,CAAC;QAC5C,IAAG,IAAI,CAAC,QAAQ,EAAE;YAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;SAAC;aACjC;YAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;SAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IACD,2CAAgB,GAAhB;QACG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAE7C,sCAAsC;QACtC,gCAAgC;QAChC,2BAA2B;QAC3B,iDAAiD;QACjD,+BAA+B;QAC/B,+BAA+B;IAC/B,CAAC;IAxJY,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,6HAAuC;;SAExC,CAAC;+EAW6B,oEAAY,EAAiB,sDAAM,EAAkB,oEAAY;OAVnF,gBAAgB,CA0J5B;IAAD,uBAAC;CAAA;AA1J4B;;;;;;;;;;;;ACjB7B,+DAA+D,mK;;;;;;;;;;;ACA/D,8C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uHAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPyB;AACF;AAE2B;AAC6B;AACvB;AACoB;AAC1B;AACM;AACN;AACH;AAIjC;AACc;AAIvD,IAAM,MAAM,GAAW,CAAG,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAa,EAAE;IAChE,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,8FAAgB,EAAG,WAAW,EAAE,CAAC,8DAAS,CAAC,EAAC;IAC1E,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qHAAuB,EAAE;IAC9D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,wFAAc,EAAE;IAC5C,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,wFAAc,EAAC;IACxC,EAAC,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,kHAAsB,EAAC;IAClD,EAAC,IAAI,EAAE,OAAO,EAAG,SAAS,EAAC,wFAAc,EAAG,WAAW,EAAE,CAAE,gEAAU,CAAC,EAAC;IACvE,EAAC,IAAI,EAAC,kBAAkB,EAAE,SAAS,EAAC,8FAAgB,EAAC;IACrD,EAAC,IAAI,EAAC,cAAc,EAAE,SAAS,EAAC,8FAAgB,EAAC;IACjD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC;AAMjD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,+DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,6DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AClC7B,oCAAoC,sBAAsB,iCAAiC,yBAAyB,wBAAwB,GAAG,6CAA6C,ub;;;;;;;;;;;ACA5L,8EAA8E,SAAS,6yBAA6yB,wBAAwB,0J;;;;;;;;;;;;;;;;;;;;ACCn3B;AACC;AACc;AACA;AAQxD;IAGE,sBAAoB,KAAmB,EAAU,KAAmB,EAAU,MAAc;QAAxE,UAAK,GAAL,KAAK,CAAc;QAAU,UAAK,GAAL,KAAK,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF5F,UAAK,GAAG,gBAAgB,CAAC;IAEsE,CAAC;IAChG,8BAAO,GAAP;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IAPU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAI2B,oEAAY,EAAiB,oEAAY,EAAkB,sDAAM;OAHjF,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACa;AACU;AAEA;AAER;AACT;AAC8B;AACH;AACG;AACM;AACJ;AACwB;AACpB;AACuB;AAC1B;AACH;AAE7E,0DAA0D;AA2B1D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wFAAc;gBACd,qFAAa;gBACb,yFAAc;gBACd,+FAAgB;gBAChB,mHAAsB;gBACtB,+FAAgB;gBAChB,sHAAuB;gBACvB,4FAAe;gBACf,yFAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,oEAAgB;gBAChB,6FAAuB;gBACvB,4EAAoB;aACrB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACjDmB;AAC4B;AACV;AACP;AACY;AACT;AACF;AAMrD;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,iEAAe,EAAE,mEAAiB,EAAC,0EAAgB,EAAE,oEAAa,EAAC,+EAAkB,EAAE,sEAAc,EAAE,oEAAa,CAAC;YAC/H,OAAO,EAAE,CAAC,iEAAe,EAAE,mEAAiB,EAAC,0EAAgB,EAAE,oEAAa,EAAC,+EAAkB,EAAE,sEAAc,EAAE,oEAAa,CAAC;SAChI,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;ACZjC;AAAA;AAAA;AAAA,wDAAwD;AAExD;IAMI,eAAY,IAAoB;QAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEL,YAAC;AAAD,CAAC;;AAGD,IAAY,SAKX;AALD,WAAY,SAAS;IACjB,+CAAO;IACP,2CAAK;IACL,yCAAI;IACJ,+CAAO;AACX,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;;;;;;;;;;;;;;;;;;;ACpB0C;AAGI;AAK/C;IAEE,oBAAoB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;IAAG,CAAC;IAC5C,gCAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QACzB,qCAAqC;QACtC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IARU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG4B,2DAAY;OAF7B,UAAU,CAUtB;IAAD,iBAAC;CAAA;AAVsB;;;;;;;;;;;;;;;;;;;;;ACRmC;AACf;AAEd;AACoB;AAKjD;IAKE,sBAAoB,MAAe;QACjC,2EAA2E;QAD7E,iBAcE;QAdkB,WAAM,GAAN,MAAM,CAAS;QAH3B,YAAO,GAAG,IAAI,4CAAO,EAAS,CAAC;QAC/B,yBAAoB,GAAG,KAAK,CAAC;QAKnC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAC3B,IAAG,KAAK,YAAY,+DAAe,EAAE;gBACnC,IAAG,KAAI,CAAC,oBAAoB,EAAE;oBAC5B,qCAAqC;oBACrC,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;iBACnC;qBAAM;oBACL,uBAAuB;oBACvB,KAAI,CAAC,KAAK,EAAE,CAAC;iBACd;aACF;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,+BAAQ,GAAR;QAEE,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,8BAAO,GAAP,UAAQ,OAAe,EAAE,oBAA4B;QAA5B,mEAA4B;QACnD,IAAI,CAAC,KAAK,CAAC,uDAAS,CAAC,OAAO,EAAE,OAAO,EAAC,oBAAoB,CAAC,CAAC;IAC9D,CAAC;IAED,4BAAK,GAAL,UAAM,OAAe,EAAE,oBAA4B;QAA5B,mEAA4B;QAClD,IAAI,CAAC,KAAK,CAAC,uDAAS,CAAC,KAAK,EAAE,OAAO,EAAC,oBAAoB,CAAC,CAAC;IAC5D,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAe,EAAE,oBAA4B;QAA5B,mEAA4B;QAChD,IAAI,CAAC,KAAK,CAAC,uDAAS,CAAC,IAAI,EAAE,OAAO,EAAC,oBAAoB,CAAC,CAAC;IAC3D,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAe,EAAE,oBAA4B;QAA5B,mEAA4B;QAChD,IAAI,CAAC,KAAK,CAAC,uDAAS,CAAC,OAAO,EAAE,OAAO,EAAC,oBAAoB,CAAC,CAAC;IAC9D,CAAC;IAED,4BAAK,GAAL,UAAM,IAAe,EAAE,OAAe,EAAE,oBAA4B;QAA5B,mEAA4B;QAClE,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAS,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAE5D,CAAC;IAED,4BAAK,GAAL;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAnDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM6B,sDAAM;OALxB,YAAY,CAqDxB;IAAD,mBAAC;CAAA;AArDwB;;;;;;;;;;;;;;;;;;;ACTsB;AACJ;AAO3C;IAEE,mBAAoB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;IAAG,CAAC;IAE5C,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IARU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG4B,2DAAY;OAF7B,SAAS,CAUrB;IAAD,gBAAC;CAAA;AAVqB;;;;;;;;;;;;;;;;;;;;;ACRyC;AACD;AACnB;AACS;AASpD;IAgBE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAdrC,kDAAkD;QAClD,eAAU,GAAG,qEAAW,CAAC,WAAW,GAAG,YAAY;QACnD,eAAU,GAAG,qEAAW,CAAC,WAAW,GAAG,WAAW;QAClD,gDAAgD;QAChD,UAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC;QAE3C,gBAAW,GAAG;YACb,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,cAAc,EAAG,IAAI,CAAC,KAAK;aAC5B,CAAC;SACH,CAAC;IAKF,CAAC;IACD,iCAAU,GAAV;QACE,IAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC;QAEnD,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,cAAc,EAAG,OAAO;aACzB,CAAC;SACH,CAAC;QAEJ,8DAA8D;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,UAAU,GAAC,MAAM,EAAE,OAAO,CAAC;IAC5D,CAAC;IAED,oCAAa,GAAb,UAAc,EAAE,EAAC,KAAK;QACpB,IAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC;QACnD,IAAI,aAAa,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,cAAc,EAAG,OAAO;aACzB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,UAAU,GAAE,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IAC7E,CAAC;IAED,qCAAc,GAAd,UAAe,EAAE,EAAC,KAAK;QACrB,IAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC;QACnD,IAAI,eAAe,GAAG;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,cAAc,EAAG,OAAO;aACzB,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,UAAU,GAAE,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;IAC/E,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO;IACT,CAAC;IACD,+BAAQ,GAAR,cAAa,OAAO,IAAI,CAAC,KAAK,CAAC,EAAC;IAEhC,iCAAU,GAAV;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAG,CAAC,KAAK;YAAE,OAAO,KAAK,CAAC;QAExB,IAAI,SAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;QACvC,IAAM,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAElD,OAAO,CAAC,SAAS,CAAC;IACpB,CAAC;IAED,8BAAO,GAAP;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAG,CAAC,KAAK;YAAE,OAAO,KAAK,CAAC;QAExB,IAAI,SAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;QACvC,IAAM,aAAa,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACnD,IAAM,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAElD,IAAG,aAAa,CAAC,OAAO,IAAI,CAAC,SAAS;YAAE,OAAO,IAAI,CAAC;;YAC/C,OAAO,KAAK,CAAC;IACpB,CAAC;IAED,sBAAI,qCAAW;aAAf;YACE,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAG,CAAC,KAAK;gBAAE,OAAO,IAAI,CAAC;YAEvB,OAAO,IAAI,mEAAgB,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEnD,CAAC;;;OAAA;IAED,6BAAM,GAAN,UAAO,KAAK;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;IACtE,CAAC;IAED,8BAAO,GAAP,UAAQ,KAAK;QACX,IAAI,SAAS,GAAE,KAAK,CAAC,SAAS;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAC,GAAG,GAAC,SAAS,EAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9E,CAAC;IAED,6BAAM,GAAN,UAAO,KAAK;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;IAEjE,CAAC;IAGD,8BAAO,GAAP;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAEnC,CAAC;IA7GU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAiB0B,+DAAU;OAhBzB,YAAY,CA8GxB;IAAD,mBAAC;CAAA;AA9GwB;;;;;;;;;;;;;ACNzB;AAAA;AAAA;IAAA;IAUA,CAAC;IARU,mBAAK,GAAZ,UAAa,CAAkB;QAC3B,IAAG,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,KAAI,CAAC;YAAE,OAAO,IAAI,CAAC;QACvD,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE;YAC7D,wBAAwB;YACxB,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;SAC9D;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,+BAA+B;CAC7C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n\\n.status {\\n    color:white;\\n    line-height: 14px;\\n    font-size: 14px;\\n    width: 30%;\\n    height: 12px;\\n    padding: 10px;\\n    margin: 8px auto;\\n    opacity: .4;\\n    border-radius: 3px;\\n}\\n\\n.alert-success {\\n    background-color: #28a745;\\n}\\n\\n.alert-danger {\\n    background-color: #dc3545;\\n}\\n\\n.alert-info {\\n    background-color: #17a2b8;\\n}\\n\\n.alert-warning {\\n    background-color: #ffc107;\\n}\\n\\n.alert-primary {\\n    background-color: #007bff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvZ2VuZXJhbC9zdGF0dXMvc3RhdHVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZUFBZTtJQUNmLFVBQVU7SUFDVixZQUFZO0lBQ1osYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvX2NvbXBvbmVudHMvZ2VuZXJhbC9zdGF0dXMvc3RhdHVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLnN0YXR1cyB7XG4gICAgY29sb3I6d2hpdGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAzMCU7XG4gICAgaGVpZ2h0OiAxMnB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luOiA4cHggYXV0bztcbiAgICBvcGFjaXR5OiAuNDtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi5hbGVydC1zdWNjZXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xufVxuXG4uYWxlcnQtZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xufVxuXG4uYWxlcnQtaW5mbyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE3YTJiODtcbn1cblxuLmFsZXJ0LXdhcm5pbmcge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDc7XG59XG5cbi5hbGVydC1wcmltYXJ5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xufSJdfQ== */\"","module.exports = \"<div>\\n<div *ngFor= \\\"let alert of alerts\\\" class=\\\"{{cssClass(alert)}} alert-dismissable status\\\">\\n    {{alert.message}}\\n</div>\\n</div>\"","import { AlertService } from './../../../services/alert.service';\nimport { Alert, AlertType } from './../../../models/alert';\nimport { Component, OnInit } from '@angular/core';\nimport {Status} from '../../../models/status';\n\n\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit {\n\n  status:Status = {\n    level : \"primary\",\n    message : \"All Okay\"\n    \n  }; \n\n  alerts: Alert[];\n\n  constructor(private alertService : AlertService) { }\n\n  ngOnInit() {\n    \n    this.alertService.getAlert().subscribe((alert: Alert) =>{\n      if(!alert) {\n         this.alerts = [];\n         return;\n      }\n\n      this.alerts.push(alert);\n    });\n  }\n\n  removeAlert(alert: Alert) {\n    this.alerts = this.alerts.filter( x => x !== alert);\n  }\n\n  cssClass(alert : Alert) {\n    if (!alert) {return}\n\n    switch(alert.type) {\n      case AlertType.Success: return 'alert alert-success';\n      case AlertType.Error: return 'alert alert-danger';\n      case AlertType.Info: return 'alert alert-info';\n      case AlertType.Warning: return 'alert alert-warning';\n\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3Byb2ZpbGUvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  admin works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".create-user {\\n    width: 600px;\\n    max-width: 800px;\\n    width: 100%;\\n    margin: auto;\\n}\\n\\n.fields {\\n    width: 100%;\\n}\\n\\n.list-user {\\n    width: 600px;\\n    margin:0 auto;\\n    \\n}\\n\\n.top-header {\\n    margin-top : 80px;\\n    margin-bottom: 60px;\\n}\\n\\n.inline-buttons {\\n\\n    display : inline;\\n    margin : 8px;\\n}\\n\\n.ro-text {\\n    color: brown;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcHJvZmlsZS9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7O0FBRWpCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9fY29tcG9uZW50cy9wcm9maWxlL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jcmVhdGUtdXNlciB7XG4gICAgd2lkdGg6IDYwMHB4O1xuICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiBhdXRvO1xufVxuXG4uZmllbGRzIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmxpc3QtdXNlciB7XG4gICAgd2lkdGg6IDYwMHB4O1xuICAgIG1hcmdpbjowIGF1dG87XG4gICAgXG59XG5cbi50b3AtaGVhZGVyIHtcbiAgICBtYXJnaW4tdG9wIDogODBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xufVxuXG4uaW5saW5lLWJ1dHRvbnMge1xuXG4gICAgZGlzcGxheSA6IGlubGluZTtcbiAgICBtYXJnaW4gOiA4cHg7XG59XG5cbi5yby10ZXh0IHtcbiAgICBjb2xvcjogYnJvd247XG59Il19 */\"","module.exports = \"\\n<form  [formGroup]= \\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"create-user\\\">\\n    <div>\\n          <h1 class=\\\"top-header\\\"> Update Password</h1>\\n          <div>\\n              <mat-form-field class=\\\"fields\\\">\\n                <input matInput class=\\\"ro-text\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\"\\n                  formControlName=\\\"name\\\">\\n              </mat-form-field>\\n            </div>\\n      <div>\\n        <mat-form-field class=\\\"fields\\\">\\n          <input matInput class=\\\"ro-text\\\" id=\\\"oldpassword\\\" type=\\\"password\\\" placeholder=\\\" Old Password\\\"\\n            formControlName=\\\"oldpassword\\\">\\n          <mat-error *ngIf=\\\"f.oldpassword.errors?.required && (f.oldpassword.dirty || f.oldpassword.invalid)\\\">Old Password\\n            is Required</mat-error>\\n          <mat-error *ngIf=\\\"f.oldpassword.errors?.minlength && (f.oldpassword.dirty || f.oldpassword.invalid)\\\">Password\\n            must be a minimum 5 characters</mat-error>\\n  \\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <mat-form-field class=\\\"fields\\\">\\n          <input matInput class=\\\"ro-text\\\" id=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\"\\n           formControlName=\\\"password\\\">\\n          <mat-error *ngIf=\\\"f.password.errors?.required && (f.password.dirty || f.password.invalid)\\\">A Password is\\n            Required</mat-error>\\n          <mat-error *ngIf=\\\"f.password.errors?.minlength && (f.password.dirty || f.password.invalid)\\\">Password must be a\\n            minimum 5 characters</mat-error>\\n  \\n        </mat-form-field>\\n      </div>\\n  \\n      <div>\\n        <mat-form-field class=\\\"fields\\\">\\n          <input matInput class=\\\"ro-text\\\" id=\\\"confirm-password\\\" type=\\\"password\\\" placeholder=\\\"Confirm Password\\\"\\n            formControlName=\\\"confirmpassword\\\">\\n          <mat-error\\n            *ngIf=\\\"f.confirmpassword.errors?.confirmpassword && (f.confirmpassword.dirty || f.confirmpassword.invalid)\\\">\\n            Password must match!</mat-error>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <button  id=\\\"submit-button\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" >Submit</button>\\n    <button (click)=\\\"cancelUpdate()\\\" class=\\\"inline-buttons\\\" mat-raised-button color=\\\"primary\\\" >Cancel</button>\\n  </form>\"","import { AlertService } from './../../../services/alert.service';\nimport { User } from '../../../models/user';\nimport { LoginService } from '../../../services/login.service';\nimport { MatchPassword } from '../../../validators/password-validator';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {FormControl,FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  form ;\n  user :User;\n  //statusMessage = null;\n  id : string;\n  exp : Date;\n\n  constructor(private signup : LoginService, private router:Router, private alert : AlertService) { }\n\n  ngOnInit() {\n\n    if(!localStorage.getItem('token')) { this.router.navigate(['login']); }\n        \n      this.form = new FormGroup({\n          name : new FormControl ({value : '', disabled : true}),\n          oldpassword: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\n          password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\n          confirmpassword: new FormControl('', [Validators.required])\n      }, { validators: MatchPassword.match });\n\n\n    this.signup.getProfile()\n    .subscribe((profile)=>{\n      if(profile) {\n      this.form.patchValue({'name' : profile.name});\n      this.user = profile;\n      this.id = profile._id;\n      } \n      \n    },(error) => {\n       this.alert.error(error.error);\n       setTimeout(()=>{\n        this.router.navigate(['login']);\n    },2000);\n\n    });\n\n  }\n\n  ngOnDestroy(): void {  }\n\n  get f() {\n    return this.form.controls\n    };\n  \n   \n  get p() {\n    return this.user\n  }\n\n  onSubmit() {\n    const post = {\n        oldpassword: this.form.value.oldpassword,\n        password: this.form.value.password,\n        name : this.user.name,\n        email : this.user.email\n    }\n    this.signup.updateProfile(this.id, post)\n        .subscribe(response => {\n            this.alert.success(\"Request Sent Successfully\");\n            // update the user object.\n            setTimeout(() => {\n                this.router.navigate(['profile']);\n            }, 2000);\n        },\n            (error) => {\n                this.alert.error(error.error.message);\n            }\n        );\n\n}\n\ncancelUpdate() {\n  this.alert.clear();\n  this.router.navigate(['profile']);\n  \n}\n\n}\n","module.exports = \".create-user {\\n    display: flex;\\n    flex-direction: column;\\n    margin: auto;\\n    margin-top: 50px;\\n    width: 50%;\\n\\n}\\n\\n.create-user > * {\\n    width: 100%;\\n}\\n\\n#submit-button {\\n    width:30%;\\n    margin: auto;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcHJvZmlsZS9jcmVhdGUtcHJvZmlsZS9jcmVhdGUtcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLFVBQVU7O0FBRWQ7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBQ0E7SUFDSSxTQUFTO0lBQ1QsWUFBWTs7QUFFaEIiLCJmaWxlIjoic3JjL2FwcC9fY29tcG9uZW50cy9wcm9maWxlL2NyZWF0ZS1wcm9maWxlL2NyZWF0ZS1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3JlYXRlLXVzZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICB3aWR0aDogNTAlO1xuXG59XG5cbi5jcmVhdGUtdXNlciA+ICoge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuI3N1Ym1pdC1idXR0b24ge1xuICAgIHdpZHRoOjMwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgXG59Il19 */\"","module.exports = \"\\n  <form  [formGroup]= \\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"create-user\\\">\\n  <h1>Create Profile</h1>\\n  <div>\\n  </div>\\n    <mat-form-field >\\n    <input matInput\\n           id=\\\"name\\\"\\n           type=\\\"text\\\"\\n           placeholder=\\\"Name\\\" required\\n           formControlName=\\\"name\\\">\\n    <mat-error *ngIf=\\\"f.name.errors?.required && (f.name.dirty || f.name.invalid)\\\">A Name is Required</mat-error>\\n    <mat-error *ngIf=\\\"f.name.errors?.minlength && (f.name.dirty || f.name.invalid)\\\">Name must be 5 characters</mat-error> \\n    <mat-error *ngIf=\\\"f.name.errors?.maxlength && (f.name.dirty || f.name.invalid)\\\">Name must not exceed 15 characters</mat-error> \\n    </mat-form-field>\\n  <mat-form-field>\\n    <input matInput \\n          id=\\\"email\\\"\\n          type=\\\"text\\\" placeholder=\\\"E-Mail\\\"\\n          formControlName=\\\"email\\\">\\n          <mat-error *ngIf=\\\"f.email.errors?.required && (f.email.dirty || f.email.invalid)\\\">An Email address is Required</mat-error>\\n          <mat-error *ngIf=\\\"f.email.errors?.email && (f.email.dirty || f.email.invalid)\\\">Name must be valid e-mail address</mat-error> \\n         \\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput \\n          id=\\\"password\\\"\\n          type=\\\"password\\\" placeholder=\\\"Password\\\" \\n          formControlName=\\\"password\\\">\\n          <mat-error *ngIf=\\\"f.password.errors?.required && (f.password.dirty || f.password.invalid)\\\">A Password is Required</mat-error>\\n          <mat-error *ngIf=\\\"f.password.errors?.minlength && (f.password.dirty || f.password.invalid)\\\">Password must be a minimum 5 characters</mat-error> \\n         \\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput \\n           id=\\\"confirm-password\\\"\\n           type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" \\n           formControlName=\\\"confirmpassword\\\">\\n           <mat-error *ngIf=\\\"f.confirmpassword.errors?.confirmpassword && (f.confirmpassword.dirty || f.confirmpassword.invalid)\\\">Password must match!</mat-error>\\n  </mat-form-field>\\n  <button id=\\\"submit-button\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" >Submit</button>\\n\\n \\n</form>\\n\\n\"","import { AlertService } from './../../../services/alert.service';\nimport { LoginService } from '../../../services/login.service';\nimport { MatchPassword } from '../../../validators/password-validator';\nimport { Component, OnInit } from '@angular/core';\nimport {FormControl,FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-create-profile',\n  templateUrl: './create-profile.component.html',\n  styleUrls: ['./create-profile.component.css']\n})\nexport class CreateProfileComponent implements OnInit {\n  form ;\n  //statusMessage = null;\n  constructor(private signup : LoginService, private router:Router, private alert : AlertService) { }\n\n  ngOnInit() :void {  \n  this.form = new FormGroup({\n  email : new FormControl('',[Validators.required, Validators.email]),\n  name : new FormControl ('',[Validators.required, Validators.minLength(5),Validators.maxLength(15)]),\n  password : new FormControl ('',[Validators.required, Validators.minLength(5),Validators.maxLength(15)]),\n  confirmpassword : new FormControl('',[Validators.required])\n  },{validators: MatchPassword.match});\n}\n  get f() {\n      return this.form.controls\n      };\n\n  onSubmit() {\n    const post = {\n      name : this.form.value.name,\n      email : this.form.value.email,\n      password : this.form.value.password,\n      isadmin : \"false\"\n    }\n    this.signup.signup(post)\n    .subscribe(response =>{\n        this.alert.success(\"Request Sent Successfully\");\n        setTimeout(()=>{\n            this.router.navigate(['validateuser']);\n        },3000);\n      },\n      (error) => {\n        if(error.status === 409) { this.alert.error(error.error);}\n      }\n      );\n\n }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3Byb2ZpbGUvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3Byb2ZpbGUvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form  [formGroup]= \\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"create-user\\\">\\n \\n    <div>\\n    </div>\\n    <h2>Login</h2>\\n      <mat-form-field >\\n      <input matInput\\n             id=\\\"email\\\"\\n             type=\\\"text\\\"\\n             placeholder=\\\"Email Adress\\\" required\\n             formControlName=\\\"email\\\">\\n      <mat-error *ngIf=\\\"f.email.errors?.required && (f.email.dirty || f.email.invalid)\\\">Please enter your email address</mat-error>\\n  \\n      </mat-form-field>\\n      <div>\\n      <mat-form-field >\\n          <input matInput\\n                 id=\\\"password\\\"\\n                 type=\\\"password\\\"\\n                 placeholder=\\\"Password\\\" required\\n                 formControlName=\\\"password\\\">\\n          <mat-error *ngIf=\\\"f.password.errors?.required && (f.email.dirty || f.email.invalid)\\\">Please enter your email address</mat-error>\\n      \\n          </mat-form-field>\\n        </div>\\n  <div>\\n  <button id=\\\"submit-button\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" >Submit</button>\\n  </div>\\n    </form>\"","\n\n\nimport { Component, OnInit } from '@angular/core';\nimport {FormControl,FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\nimport { LoginService } from '../../../services/login.service';\nimport { AlertService } from './../../../services/alert.service';\nimport {map} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form:FormGroup ;\n  //statusMessage = null;\n  constructor(private signup : LoginService, private router:Router, private alert : AlertService) { }\n\n  ngOnInit() :void {  \n  this.form = new FormGroup({\n    email : new FormControl('',[Validators.required,Validators.email]),\n    password : new FormControl('',[Validators.required,Validators.minLength(5)])\n  });\n}\n\nget f() {\n  return this.form.controls\n  };\n\n  onSubmit() {\n\n    const post = {\n      email : this.form.value.email,\n      password : this.form.value.password\n    }\n     this.signup.signin(post)\n    .subscribe(response =>{\n\n      if(response.token && response) {\n        this.alert.success( \"Successfully Logged in!\");\n       \n       localStorage.setItem('token', response.token);\n      }  \n        setTimeout(()=>{\n            this.router.navigate(['/']);\n        },3000);\n      },\n      (error) => {\n          this.alert.error(error.error.message);\n      \n      }\n      );\n\n }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3Byb2ZpbGUvbmV3dXNlci9uZXd1c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form  [formGroup]= \\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"create-user\\\">\\n \\n  <div>\\n  </div>\\n  <h2>Enter your Confirmation code you received in your Email Account:</h2>\\n    <mat-form-field >\\n    <input matInput\\n           id=\\\"confirmid\\\"\\n           type=\\\"text\\\"\\n           placeholder=\\\"Confirmation ID:\\\" required\\n           formControlName=\\\"confirmid\\\">\\n    <mat-error *ngIf=\\\"f.confirmid.errors?.required && (f.confirmid.dirty || f.confirmid.invalid)\\\">Please enter your confirmation Code:</mat-error>\\n\\n    </mat-form-field>\\n<div>\\n<button id=\\\"submit-button\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" >Submit</button>\\n</div>\\n  </form>\"","import { AlertService } from './../../../services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport {FormControl,FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\nimport { LoginService } from '../../../services/login.service';\n\n@Component({\n  selector: 'newuser',\n  templateUrl: './newuser.component.html',\n  styleUrls: ['./newuser.component.css']\n})\nexport class NewuserComponent implements OnInit {\n\n  form:FormGroup ;\n  //statusMessage = null;\n  constructor(private signup : LoginService, private router:Router, private alert: AlertService) { }\n\n  ngOnInit() :void {  \n  this.form = new FormGroup({\n    confirmid : new FormControl('',[Validators.required])\n  });\n}\n\nget f() {\n  return this.form.controls\n  };\n\n  onSubmit() {\n\n    const post = {\n      confirmid : this.form.value.confirmid\n    }\n     this.signup.confirm(post)\n    .subscribe(response =>{\n        this.alert.success(\"Request Sent Successfully\");\n        setTimeout(()=>{\n            this.router.navigate(['login']);\n        },3000);\n      },\n      (error) => {\n          console.log(error);\n           { this.alert.error( error.error);}\n      \n      }\n      );\n\n }\n\n}\n","module.exports = \".create-user {\\n    width: 600px;\\n    max-width: 800px;\\n    width: 100%;\\n    margin: auto;\\n}\\n\\n.fields {\\n    width: 100%;\\n}\\n\\n.list-user {\\n    width: 600px;\\n    margin:0 auto;\\n    \\n}\\n\\n.top-header {\\n    margin-top : 30px;\\n    margin-bottom: 30px;\\n}\\n\\n.inline-buttons {\\n\\n    display : inline;\\n    margin : 8px;\\n}\\n\\n.ro-text {\\n    color: brown;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTs7QUFFakI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0FBQ3ZCOztBQUVBOztJQUVJLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3Byb2ZpbGUvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3JlYXRlLXVzZXIge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogYXV0bztcbn1cblxuLmZpZWxkcyB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5saXN0LXVzZXIge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBtYXJnaW46MCBhdXRvO1xuICAgIFxufVxuXG4udG9wLWhlYWRlciB7XG4gICAgbWFyZ2luLXRvcCA6IDMwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuLmlubGluZS1idXR0b25zIHtcblxuICAgIGRpc3BsYXkgOiBpbmxpbmU7XG4gICAgbWFyZ2luIDogOHB4O1xufVxuXG4ucm8tdGV4dCB7XG4gICAgY29sb3I6IGJyb3duO1xufSJdfQ== */\"","module.exports = \"\\n<form  [formGroup]= \\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"create-user\\\">\\n        <h1 *ngIf=\\\"editMode\\\" class=\\\"top-header\\\"> Update Profile</h1>\\n        <h1 *ngIf=\\\"!editMode\\\" class=\\\"top-header\\\"> User Profile</h1>\\n        <div>\\n\\n        </div>\\n        <div>\\n          <mat-form-field  class=\\\"fields\\\" >\\n          <input \\n                 class=\\\"ro-text\\\"\\n                 matInput\\n                 id=\\\"name\\\"\\n                 type=\\\"text\\\"\\n                 formControlName=\\\"name\\\"\\n                 placeholder=\\\"Name\\\">\\n          <mat-error *ngIf=\\\"f.name.errors?.required && (f.name.dirty || f.name.invalid) && editMode\\\">A Name is Required</mat-error>\\n          <mat-error *ngIf=\\\"f.name.errors?.minlength && (f.name.dirty || f.name.invalid)  && editMode\\\">Name must be 5 characters</mat-error> \\n          <mat-error *ngIf=\\\"f.name.errors?.maxlength && (f.name.dirty || f.name.invalid)  && editMode\\\">Name must not exceed 15 characters</mat-error> \\n          </mat-form-field>\\n        </div>\\n        <div>\\n        <mat-form-field class=\\\"fields\\\">\\n          <input matInput \\n                class=\\\"ro-text\\\"\\n                id=\\\"email\\\"\\n                type=\\\"text\\\" \\n                formControlName=\\\"email\\\"\\n                placeholder=\\\"E-Mail Address\\\">\\n                <mat-error *ngIf=\\\"f.email.errors?.required && (f.email.dirty || f.email.invalid)\\\">An Email address is Required</mat-error>\\n                <mat-error *ngIf=\\\"f.email.errors?.email && (f.email.dirty || f.email.invalid)\\\">Name must be valid e-mail address</mat-error> \\n               \\n        </mat-form-field>\\n      </div>\\n\\n      <div>\\n            <mat-form-field *ngIf=\\\"editMode\\\"class=\\\"fields\\\">\\n              <input matInput \\n                     class=\\\"ro-text\\\" \\n                     id=\\\"oldpassword\\\" \\n                     type=\\\"password\\\" \\n                     placeholder=\\\"Password\\\"\\n                     formControlName=\\\"oldpassword\\\">\\n             <mat-error *ngIf=\\\"f.oldpassword.errors?.required && (f.oldpassword.dirty || f.oldpassword.invalid)\\\">Password\\n                is Required</mat-error>\\n              <mat-error *ngIf=\\\"f.oldpassword.errors?.minlength && (f.oldpassword.dirty || f.oldpassword.invalid)\\\">Password\\n                must be a minimum 5 characters</mat-error>\\n      \\n            </mat-form-field>\\n          </div>\\n    \\n        <button  *ngIf=\\\"editMode || passwordChange\\\" id=\\\"submit-button\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" >Submit</button>\\n        <button (click)=\\\"cancelUpdate()\\\" *ngIf=\\\"editMode || passwordChange\\\" class=\\\"inline-buttons\\\" mat-raised-button color=\\\"primary\\\" >Cancel</button>\\n      </form>\\n      <div class=\\\"inline-buttons\\\" >\\n      <button (click)=\\\"onUpdate()\\\" *ngIf=\\\"!editMode && !passwordChange\\\" class=\\\"inline-buttons\\\" mat-raised-button color=\\\"primary\\\"  >Update Profile</button>\\n    </div>\\n    <div class=\\\"inline-buttons\\\" >\\n        <button (click)=\\\"onPasswordUpdate()\\\" *ngIf=\\\"!editMode && !passwordChange\\\" class=\\\"inline-buttons\\\" mat-raised-button color=\\\"primary\\\"  >Update Password</button>\\n      </div>\\n\\n      \\n      \\n\"","import { AlertService } from './../../../services/alert.service';\nimport { User } from '../../../models/user';\nimport { LoginService } from '../../../services/login.service';\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {FormControl,FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  form ;\n  user :User;\n // statusMessage = null;\n  editMode = false;\n  id : string;\n  exp : Date;\n\n\n  \n  constructor(private signup : LoginService, private router:Router, private alert : AlertService) { }\n\n  ngOnInit() :void {  \n\n    if(!localStorage.getItem('token')) { this.router.navigate(['login']); }\n        \n    this.form = new FormGroup({\n      email : new FormControl('',[Validators.required, Validators.email]),\n      name : new FormControl ('',[Validators.required, Validators.minLength(5),Validators.maxLength(15)]),\n      oldpassword: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\n    });\n        \n\n    this.signup.getProfile()\n    .subscribe((profile)=>{\n      if(profile) {\n      //console.log(profile.name);\n      this.user = profile;\n      //  this.user = profile.name;\n      //  this.user.email = profile.email;\n      //  this.user.password = profile.password;\n      this.form.patchValue({'email' : profile.email});\n      this.form.patchValue({'name' : profile.name});\n      this.form.patchValue({'password' : \"*****\"});\n      this.form.disable();\n      this.id = profile._id;\n      } \n     // this.alert.success(\"Success\");\n      \n    },(error) => {\n       this.alert.error(error.error.message);\n\n       setTimeout(()=>{\n         this.alert.clear();\n         this.router.navigate(['login']);\n    },2000);\n\n    });\n\n   // this.form.email.set\n}\n\nngOnDestroy() : void {\n\n}\n\nget f() {\n  return this.form.controls\n  };\n\n \nget p() {\n  return this.user\n}  \n  \n    onSubmit() {\n        const post = {\n            name: this.form.value.name,\n            email: this.form.value.email,\n            oldpassword: this.form.value.oldpassword\n        }\n\n\n        this.signup.updateProfile(this.id, post)\n            .pipe(\n                tap(_ => console.log(\"tapping\")) ,\n                catchError( err => { throw err.error.message})\n                         \n            )\n            .subscribe (\n                response => {\n                this.alert.success(\"Request Sent Successfully\");\n                 localStorage.setItem('token', response.token);\n                // update the user object.\n                setTimeout(() => {\n                    this.router.navigate(['profile']);\n                    this.form.patchValue({'email' : response.user.email});\n                    this.form.patchValue({'name' : response.user.name});\n                    this.editMode = false;\n                    this.form.disable();\n                    this.alert.clear();\n                }, 2000);\n            } ,\n               err => this.alert.error(err) \n            );\n\n    }\n\n//     this.signup.updateProfile(this.id, post)\n//     .subscribe(response => {\n//         this.statusMessage = \"Request Sent Successfully\";\n//         localStorage.setItem('token', response.token);\n//         // update the user object.\n//         setTimeout(() => {\n//             this.router.navigate(['profile']);\n//             this.form.patchValue({'email' : this.user.email});\n//             this.form.patchValue({'name' : this.user.name});\n//             this.editMode = false;\n//             this.form.disable();\n//             this.statusMessage = null;\n//         }, 2000);\n//     },\n//         (error) => {\n//             console.log(\"This is the error handler\" + error.error.message);\n//             { this.statusMessage = error.error.message }\n//         }\n//     );\n\n// }\n\n\n cancelUpdate() {\n  // this.form = null;\n  // this.form = new FormGroup({\n  //   email : new FormControl('',[Validators.required, Validators.email]),\n  //   name : new FormControl ('',[Validators.required, Validators.minLength(5),Validators.maxLength(15)]),\n  //    });\n  this.form.patchValue({'email' : this.user.email});\n  this.form.patchValue({'name' : this.user.name});\n  this.form.patchValue({'oldpassword' : \"*****\"});\n  this.editMode = false;\n  if(this.editMode) {this.form.enable()}\n  else (this.form.disable())\n  this.alert.clear();\n}\n\n onUpdate() {\n   this.editMode = true;\n    this.form.patchValue({'oldpassword' : \"\"});\n   if(this.editMode) {this.form.enable()}\n   else {this.form.disable()}\n   this.alert.clear();\n }\n onPasswordUpdate() {\n    this.router.navigate(['changepassword']);\n\n//  // this.editMode = !this.editMode;\n//   this.passwordChange = true;\n//   this.editMode = false;\n//   if(this.passwordChange) {this.form.enable()}\n//   else (this.form.disable())\n//   this.statusMessage = null;\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3Byb2ZpbGUvcmVzZXQvcmVzZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  reset works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AdminGuard } from './services/admin.guard';\nimport { AuthGuard } from './services/auth.guard';\n\nimport { AdminComponent } from './_components/profile/admin/admin.component';\nimport { ChangePasswordComponent } from './_components/profile/change-password/change-password.component';\nimport { NewuserComponent } from './_components/profile/newuser/newuser.component';\nimport { CreateProfileComponent } from './_components/profile/create-profile/create-profile.component';\nimport { LoginComponent } from './_components/profile/login/login.component';\nimport { ProfileComponent } from './_components/profile/profile/profile.component';\nimport { ResetComponent } from './_components/profile/reset/reset.component';\nimport { HomeComponent } from './_components/profile/home/home.component';\n\n\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [  { path: '', component: HomeComponent },\n{ path: 'profile', component: ProfileComponent , canActivate: [AuthGuard]},\n{ path: 'changepassword', component: ChangePasswordComponent },\n{ path: 'reset', component: ResetComponent },\n{path:'login', component:LoginComponent},\n{path:'newuser', component:CreateProfileComponent},\n{path: 'admin' , component:AdminComponent , canActivate: [ AdminGuard]},\n{path:'validateuser/:id', component:NewuserComponent},\n{path:'validateuser', component:NewuserComponent},\n{ path: '', redirectTo: '/', pathMatch: 'full'}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\\n.currentuser {\\n    font-size: 12px;\\n    text-transform: capitalize;\\n    margin-right: 10px;\\n    margin-left: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUNJLGVBQWU7SUFDZiwwQkFBMEI7SUFDMUIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbi5jdXJyZW50dXNlciB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbn0iXX0= */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <a routerLink=\\\"/\\\"><button color=\\\"accent\\\" mat-button md-raised-button>Home</button></a>\\n    <a *ngIf=\\\"!login.isLoggedIn()\\\" routerLink=\\\"/login\\\"><button color=\\\"accent\\\" mat-button>Login</button></a>\\n    <a *ngIf=\\\"!login.isLoggedIn()\\\"routerLink=\\\"/newuser\\\"><button color=\\\"accent\\\" mat-button>SignUp</button></a>\\n    <a *ngIf=\\\"login.isLoggedIn() && login.CurrentUser.isadmin\\\"routerLink=\\\"/admin\\\"><button color=\\\"accent\\\" mat-button>Admin</button></a>\\n    <a *ngIf=\\\"login.isLoggedIn()\\\" routerLink=\\\"/profile\\\"><button color=\\\"accent\\\" mat-button>Profile</button></a>\\n    <a *ngIf=\\\"login.isLoggedIn()\\\" (click)=\\\"signout()\\\"><button color=\\\"accent\\\" mat-button>Logout</button></a>\\n    <span *ngIf=\\\"login.isLoggedIn()\\\" class=\\\"currentuser\\\">{{login.CurrentUser.name}}</span>\\n  </mat-toolbar>\\n  <div style=\\\"height : 40px\\\">\\n  <app-status></app-status>\\n</div>\\n  <div>\\n    <router-outlet></router-outlet>\\n  </div>\\n\"","\nimport { Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\nimport { AlertService } from './services/alert.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Login Template';\n\n  constructor(private login: LoginService, private alert: AlertService, private router: Router) {}\n  signout() {\n    this.login.signout();\n    this.router.navigate(['/']);\n  }\n}\n","\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { CustomMaterialModule } from './assets/materialmodules';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './_components/profile/login/login.component';\nimport { HomeComponent } from './_components/profile/home/home.component';\nimport { ResetComponent } from './_components/profile/reset/reset.component';\nimport { ProfileComponent } from './_components/profile/profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CreateProfileComponent } from './_components/profile/create-profile/create-profile.component';\nimport { NewuserComponent } from './_components/profile/newuser/newuser.component';\nimport { ChangePasswordComponent } from './_components/profile/change-password/change-password.component';\nimport { StatusComponent } from './_components/general/status/status.component';\nimport { AdminComponent } from './_components/profile/admin/admin.component';\n\n//import { AlertService } from './services/alert.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ResetComponent,\n    ProfileComponent,\n    CreateProfileComponent,\n    NewuserComponent,\n    ChangePasswordComponent,\n    StatusComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport{MatMenuModule} from '@angular/material/menu';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\n\n@NgModule({\n  imports: [MatButtonModule, MatCheckboxModule,MatToolbarModule, MatMenuModule,MatFormFieldModule, MatInputModule, MatListModule],\n  exports: [MatButtonModule, MatCheckboxModule,MatToolbarModule, MatMenuModule,MatFormFieldModule, MatInputModule, MatListModule],\n})\nexport class CustomMaterialModule { }","// see jason wattmore website on how this is implemented\n\nexport class Alert {\n    type : AlertType;\n    message : string;\n    alertId: string;\n    keepAfterRouteChange : boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n\n}\n\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private login : LoginService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n     // console.log(this.login.isAdmin());\n    return this.login.isAdmin();\n  }\n  \n}\n","import { Router , NavigationStart} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertType} from '../models/alert';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  private subject = new Subject<Alert>();\n  private keepAfterRouteChange = false;\n\n  constructor(private router : Router) {\n    // clear alert messages on route change unless keepAfterRouteChange is true\n\n    router.events.subscribe(event => {\n      if(event instanceof NavigationStart) {\n        if(this.keepAfterRouteChange) {\n          //only keep for a single route change\n          this.keepAfterRouteChange = false;\n        } else {\n          // clear alert messages\n          this.clear();\n        }\n      }\n    });\n   }\n\n   getAlert():Observable<any> {\n \n     return this.subject.asObservable();\n   }\n\n   success(message: string, keepAfterRouteChange = false) {\n     this.alert(AlertType.Success, message,keepAfterRouteChange);\n   }\n\n   error(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Error, message,keepAfterRouteChange);\n  }\n\n  info(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Info, message,keepAfterRouteChange);\n  }\n\n  warn(message: string, keepAfterRouteChange = false) {\n    this.alert(AlertType.Warning, message,keepAfterRouteChange);\n  }\n\n  alert(type: AlertType, message: string, keepAfterRouteChange = false){\n    this.keepAfterRouteChange = keepAfterRouteChange;\n    this.clear();\n    this.subject.next(<Alert> {type: type, message: message});\n \n  }\n\n  clear() {\n    this.subject.next();\n  }\n\n}\n","import { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private login : LoginService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.login.isLoggedIn();\n  }\n  \n}\n","import { environment } from './../../environments/environment';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n // hostserver= \"http://\"+ environment.backendhost;\n hostserver = environment.backendhost + \"/api/users\"\n authserver = environment.backendhost + \"/api/auth\"\n // hostserver=\"http://localhost:3000/api/users\";\n token = localStorage.getItem('token') || \" \";\n \n   httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json' ,\n      'x-auth-token' : this.token\n    })\n  };\n\n\n  constructor(private http: HttpClient) { \n    \n  }\n  getProfile() {\n    let myToken = localStorage.getItem('token') || \" \";\n \n    let Options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json' ,\n        'x-auth-token' : myToken\n      })\n    };\n\n  //  return this.http.get<any>(this.hostserver+'/me', Options);\n    return this.http.get<any>(this.hostserver+'/me/', Options)\n  }\n\n  updateProfile(id,input) {\n    let myToken = localStorage.getItem('token') || \" \";\n    let UpdateOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json' ,\n        'x-auth-token' : myToken\n      })\n    };\n    return this.http.put<any>(this.hostserver +'/' + id, input, UpdateOptions);\n  }\n\n  updatePassword(id,input) {\n    let myToken = localStorage.getItem('token') || \" \";\n    let PasswordOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json' ,\n        'x-auth-token' : myToken\n      })\n    };\n    return this.http.put<any>(this.hostserver +'/' + id, input, PasswordOptions);\n  }\n\n  clearProfile() {\n    this.httpOptions = null;\n    return;\n  }\n  getToken() { return this.token;}\n\n  isLoggedIn() {\n    const token = localStorage.getItem('token');\n    if(!token) return false;\n\n    let jwtHelper = new JwtHelperService();\n    const isExpired = jwtHelper.isTokenExpired(token);\n    \n    return !isExpired;\n  }\n\n  isAdmin() {\n    const token = localStorage.getItem('token');\n    if(!token) return false;\n\n    let jwtHelper = new JwtHelperService();\n    const decrptedValue = jwtHelper.decodeToken(token);\n    const isExpired = jwtHelper.isTokenExpired(token);\n    \n    if(decrptedValue.isadmin && !isExpired) return true;\n    else return false;\n  }\n\n  get CurrentUser() {\n    let token = localStorage.getItem('token');\n    if(!token) return null;\n\n    return new JwtHelperService().decodeToken(token);\n\n  }\n\n  signin(input) {\n    return this.http.post<any>(this.authserver, input, this.httpOptions)\n  }\n\n  confirm(input) {\n    let confirmid= input.confirmid\n    return this.http.post(this.hostserver+'/'+confirmid,input,this.httpOptions);\n  }\n\n  signup(input) {\n    return this.http.post(this.hostserver ,input, this.httpOptions)\n\n  }\n\n\n  signout() {\n    localStorage.removeItem('token');\n    \n  }\n}\n","\n\nimport {AbstractControl, ValidationErrors} from '@angular/forms';\n\n\n\nexport class MatchPassword {\n\n    static match(c: AbstractControl) : ValidationErrors | null {\n        if(c.value == null || c.value.length ===0) return null;\n        if (c.get('password').value !== c.get('confirmpassword').value) {\n           // return {match: true};\n           c.get('confirmpassword').setErrors({confirmpassword: true});\n        }\n        return null;\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendhost: \"http://host.template.baz:3000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}